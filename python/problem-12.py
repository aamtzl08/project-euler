# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# What is the value of the first triangle number to have over five hundred divisors?


def get_divisors(number):
    bound = int(round(number ** (1/2), 0))
    divisors = []
    for i in range(1, bound + 1):
        if number % i == 0:
            divisors.append(i)
            divisors.append(int(number / i))
    return sorted(divisors)

divisors = []
triangle_sum = 0
counter = 1
while len(divisors) < 500:
    triangle_sum += counter
    divisors = get_divisors(triangle_sum)
    counter += 1

print(triangle_sum)
